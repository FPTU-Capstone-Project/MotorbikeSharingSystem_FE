name: Deploy to Vercel

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run linter
        run: npm run lint || echo "⚠️ Linting completed with warnings"
        continue-on-error: true

      - name: 🏗️ Build project
        run: npm run build
        env:
          CI: false

      - name: 📊 Check bundle size
        run: |
          echo "📦 Build output size:"
          du -sh build/
          echo ""
          echo "📄 Main bundle sizes:"
          ls -lh build/static/js/*.js 2>/dev/null || echo "No JS bundles found"

      - name: 🚀 Install Vercel CLI
        run: npm install -g vercel@latest

      - name: 🔗 Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ github.event_name == 'push' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Project Artifacts
        run: vercel build ${{ github.event_name == 'push' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Vercel
        id: deploy
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
            echo "environment=Production" >> $GITHUB_OUTPUT
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
            echo "environment=Preview" >> $GITHUB_OUTPUT
          fi
          echo "url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT

      - name: 📝 Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview deployment is ready!**\n\n✅ [View deployment](${url})`
            });

      - name: ✅ Deployment complete
        run: |
          echo "🎉 Deployment successful!"
          echo "🌍 Environment: ${{ steps.deploy.outputs.environment }}"
          echo "🔗 URL: ${{ steps.deploy.outputs.url }}"
